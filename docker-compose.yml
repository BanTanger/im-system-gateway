version: '3.8'

services:
  # MySQL 容器
  im-mysql:
    container_name: im-mysql
    image: mysql:8.0.33
    build:
      context: ./docker/mysql
    restart: always
    privileged: true
    volumes:
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/logs:/var/log/mysql
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/db:/docker-entrypoint-initdb.d/

    environment:
      MYSQL_ROOT_PASSWORD: 'whalesharkim'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "13306:3306"
    networks:
      - im-network

  # ZooKeeper 容器
  im-zookeeper:
    container_name: im-zookeeper
    image: zookeeper:3.4.13
    restart: always
    privileged: true
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=localhost:2888:3888
    healthcheck:
      test: ["CMD-SHELL", "zkOk=$(echo stat | nc localhost 2181 | grep Mode); if [ -z \"$zkOk\" ]; then exit 1; fi"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - im-network

  # RabbitMQ 容器
  im-rabbitmq:
    container_name: im-rabbitmq
    image: rabbitmq:management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - im-network

  # Redis 容器
  im-redis:
    container_name: im-redis
    image: redis:6.0.8
    build:
      context: ./docker/redis
    restart: always
    command: redis-server /home/order/redis/redis.conf  # 指定 Redis 使用配置文件
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/conf/redis.conf:/home/order/redis/redis.conf
      - ./docker/redis/data:/data
    networks:
      - im-network

  # IM Domain 容器
  im-domain:
    container_name: im-domain
    build:
      context: ./docker/build/domain
    restart: always
    ports:
      - "18000:18000"
    depends_on:
      - im-mysql
      - im-zookeeper
      - im-redis
      - im-rabbitmq
    links:
      - im-mysql
      - im-zookeeper
      - im-redis
      - im-rabbitmq
    networks:
      - im-network

  # IM Message Store 容器
  im-message-store:
    container_name: im-message-store
    build:
      context: ./docker/build/message-store
    restart: always
    ports:
      - "18001:18001"
    depends_on:
      - im-mysql
      - im-redis
      - im-rabbitmq
    links:
      - im-mysql
      - im-redis
      - im-rabbitmq
    networks:
      - im-network

  # IM TCP 容器
  im-tcp:
    container_name: im-tcp
    build:
      context: ./docker/build/tcp
    restart: always
    ports:
      - "19000:19000" # springboot 启动端口
      - "19001:19001" # tcp 端口
      - "19002:19002" # ws 端口
    depends_on:
      - im-redis
      - im-rabbitmq
      - im-zookeeper
    links:
      - im-redis
      - im-rabbitmq
      - im-zookeeper
    networks:
      - im-network

networks:
  im-network:
    driver: bridge

