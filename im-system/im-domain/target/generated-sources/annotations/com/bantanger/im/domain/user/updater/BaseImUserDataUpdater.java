// --- Auto Generated by BanTanger ---
package com.bantanger.im.domain.user.updater;

import com.bantanger.common.enums.ValidStatus;
import com.bantanger.common.model.CodeValue;
import com.bantanger.im.domain.user.ImUserData;
import com.bantanger.im.domain.user.enums.FriendAllowType;
import com.bantanger.im.domain.user.enums.UserType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import lombok.Data;

@Schema
@Data
public class BaseImUserDataUpdater {
   @Schema(
         title = "用户名称"
   )
   private String nickName;

   @Schema(
         title = "位置"
   )
   private String location;

   @Schema(
         title = "生日"
   )
   private String birthDay;

   @Schema(
         title = "密码"
   )
   private String password;

   @Schema(
         title = "头像"
   )
   private String photo;

   @Schema(
         title = "性别"
   )
   private String userSex;

   @Schema(
         title = "个性签名"
   )
   private String selfSignature;

   @Schema(
         title = "加好友验证类型"
   )
   private FriendAllowType friendAllowType;

   @Schema(
         title = "管理员禁止用户添加加好友"
   )
   private ValidStatus disableAddFriend;

   @Schema(
         title = "禁用标识"
   )
   private ValidStatus forbiddenFlag;

   @Schema(
         title = "禁言标识"
   )
   private ValidStatus silentFlag;

   @Schema(
         title = "用户类型"
   )
   private UserType userType;

   @Schema(
         title = "用户所在APP"
   )
   private Integer appId;

   @Schema(
         title = "扩展信息"
   )
   private List<CodeValue> extra;

   private Long id;

   protected BaseImUserDataUpdater() {
   }

   public String getNickName() {
      return nickName;
   }

   public void setNickName(String nickName) {
      this.nickName = nickName;
   }

   public String getLocation() {
      return location;
   }

   public void setLocation(String location) {
      this.location = location;
   }

   public String getBirthDay() {
      return birthDay;
   }

   public void setBirthDay(String birthDay) {
      this.birthDay = birthDay;
   }

   public String getPassword() {
      return password;
   }

   public void setPassword(String password) {
      this.password = password;
   }

   public String getPhoto() {
      return photo;
   }

   public void setPhoto(String photo) {
      this.photo = photo;
   }

   public String getUserSex() {
      return userSex;
   }

   public void setUserSex(String userSex) {
      this.userSex = userSex;
   }

   public String getSelfSignature() {
      return selfSignature;
   }

   public void setSelfSignature(String selfSignature) {
      this.selfSignature = selfSignature;
   }

   public FriendAllowType getFriendAllowType() {
      return friendAllowType;
   }

   public void setFriendAllowType(FriendAllowType friendAllowType) {
      this.friendAllowType = friendAllowType;
   }

   public ValidStatus getDisableAddFriend() {
      return disableAddFriend;
   }

   public void setDisableAddFriend(ValidStatus disableAddFriend) {
      this.disableAddFriend = disableAddFriend;
   }

   public ValidStatus getForbiddenFlag() {
      return forbiddenFlag;
   }

   public void setForbiddenFlag(ValidStatus forbiddenFlag) {
      this.forbiddenFlag = forbiddenFlag;
   }

   public ValidStatus getSilentFlag() {
      return silentFlag;
   }

   public void setSilentFlag(ValidStatus silentFlag) {
      this.silentFlag = silentFlag;
   }

   public UserType getUserType() {
      return userType;
   }

   public void setUserType(UserType userType) {
      this.userType = userType;
   }

   public Integer getAppId() {
      return appId;
   }

   public void setAppId(Integer appId) {
      this.appId = appId;
   }

   public List<CodeValue> getExtra() {
      return extra;
   }

   public void setExtra(List<CodeValue> extra) {
      this.extra = extra;
   }

   public void updateImUserData(ImUserData param) {
      Optional.ofNullable(getNickName()).ifPresent(v -> param.setNickName(v));
      Optional.ofNullable(getLocation()).ifPresent(v -> param.setLocation(v));
      Optional.ofNullable(getBirthDay()).ifPresent(v -> param.setBirthDay(v));
      Optional.ofNullable(getPassword()).ifPresent(v -> param.setPassword(v));
      Optional.ofNullable(getPhoto()).ifPresent(v -> param.setPhoto(v));
      Optional.ofNullable(getUserSex()).ifPresent(v -> param.setUserSex(v));
      Optional.ofNullable(getSelfSignature()).ifPresent(v -> param.setSelfSignature(v));
      Optional.ofNullable(getFriendAllowType()).ifPresent(v -> param.setFriendAllowType(v));
      Optional.ofNullable(getDisableAddFriend()).ifPresent(v -> param.setDisableAddFriend(v));
      Optional.ofNullable(getForbiddenFlag()).ifPresent(v -> param.setForbiddenFlag(v));
      Optional.ofNullable(getSilentFlag()).ifPresent(v -> param.setSilentFlag(v));
      Optional.ofNullable(getUserType()).ifPresent(v -> param.setUserType(v));
      Optional.ofNullable(getAppId()).ifPresent(v -> param.setAppId(v));
      Optional.ofNullable(getExtra()).ifPresent(v -> param.setExtra(v));
   }

   public Long getId() {
      return id;
   }

   public void setId(long id) {
      this.id = id;
   }
}
